@import '../../styles/utils/colors';
@import '../../styles/utils/media-queries';
@import '../../styles/utils/mixins';

$grid-gap: 10px;
$skillBadge-size: 80px;
$skillBadge-size-medium: 60px;
$skillBadge-size-small: 50px;

.SkillGrid {
    padding: 20px;

    &,
    .skillGroup {
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .groupLabel {
        font: 16px 'opensans-semibold', sans-serif;
        background: none;
        color: get-contrast-color('light');
        padding: 3px 10px;
        display: flex;
        justify-content: space-between;
        justify-items: center;
        align-items: center;
        margin-bottom: 10px;
        box-shadow: none;
        transform: none;
        text-decoration: none;
        text-transform: none;
    }

    .additionalLabel {
        margin-top: 20px;
        border-radius: 0;
        transition: none;

        .arrow {
            margin-left: 5px;
            font-size: 20px;
            display: flex;

            & :global(.svgr) {
                transition: transform 100ms ease-in-out;
                transform: rotate(0deg);
                transform-origin: center;
                color: currentColor;
            }

            &.up :global(.svgr) {
                transform: rotate(180deg);
            }
        }
    }

    .skills {
        width: 100%;
        transition: height 300ms ease-in-out, opacity 300ms ease-in-out;
        overflow: hidden;
        padding: 16px 3px;

        @include grid-repeat-box(
            $gap: $grid-gap,
            $min-item-size: $skillBadge-size,
            $column-count: 5
        );

        &.expandable {
            height: 290px;

            &.hidden {
                height: 0;
                opacity: 0;
                pointer-events: none;
            }
        }
    }

    .skillContainer {
        height: $skillBadge-size-medium;
        min-width: $skillBadge-size;
        min-height: $skillBadge-size;
        width: 100%;
        display: flex;
        justify-content: center;
    }



    :global(.skillBadge) {
        // Remove margin to make css grid take care of it
        margin: 0;
    }
}

// Media Queries
.SkillGrid {
    @mixin setSkillBadgeSize($size) {
        width: $size;
        height: $size;
        max-height: $size;
        min-width: $size;
        max-width: $size;
        min-height: $size;
    }

    @include media('<=tablet') {
        .skills {
            &.expandable {
                height: 270px;
            }

            @include grid-repeat-box(
                $gap: $grid-gap,
                $min-item-size: $skillBadge-size-medium
            );
        }

        .skillContainer {
            height: $skillBadge-size-medium;
            min-width: $skillBadge-size-medium;
            min-height: $skillBadge-size-medium;

            :global(.skillBadge) {
                @include setSkillBadgeSize($skillBadge-size-medium);
                padding-top: 15px;
                padding-bottom: 10px;

                :global(.skillBadge__itemLabel) {
                    display: none;
                }

                :global(.skillLevelBanner) {
                    height: 10px;
                    border-bottom-width: 1px;

                    :global(.content-container) {
                        display: none;
                    }
                }
            }
        }
    }

    @include media('<=phone') {
        .skills {
            @include grid-repeat-box(
                $gap: 10px,
                $min-item-size: $skillBadge-size-small
            );
        }

        .skillContainer {
            height: $skillBadge-size-small;
            min-width: $skillBadge-size-small;
            min-height: $skillBadge-size-small;

            :global(.skillBadge) {
                @include setSkillBadgeSize($skillBadge-size-small);
                padding-top: 13px;

                :global(.skillLevelBanner) {
                    height: 8px;
                    border-bottom-width: 1px;

                    :global(.content-container) {
                        display: none;
                    }
                }
            }
        }

    }

}
